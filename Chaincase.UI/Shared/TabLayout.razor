@inherits LayoutComponentBase 
@using Chaincase.UI.Services
@using Chaincase.Common
@implements IDisposable
@inject UIStateService StateService
@inject StackService StackService
@inject NavigationManager NavigationManager
@inject ThemeSwitcher ThemeSwitcher
@inject Global Global

<IonSplitPane when="sm" content-id="main-content" disabled="@StackService.AnyStackState">
    <IonPage class="ion-page" id="main-content">
        <IonTabs>
            <IonTab>
                <IonHeader>
                    <IonToolbar>
                        <IonButtons slot="start">
                            @if (StackService.AnyStackState)
                            {
                                <ion-back-button @onclick="() => StackService.InvokeStackState()" @onclick:preventDefault="true" default-href="lol"></ion-back-button>
                            }
                        </IonButtons>
                        @if (NavigationManager.Uri == NavigationManager.ToAbsoluteUri("/overview").ToString())
                        {
                            <IonButtons slot="end">
                                <IonButton OnClick='@(() => StackPush("/walletinfo"))'>
                                    <IonIcon slot="icon-only" name="information-circle-outline"></IonIcon>
                                </IonButton>
                            </IonButtons>

                        }
                        <IonTitle>@StateService.Title</IonTitle>
                    </IonToolbar>
                </IonHeader>
                @Body
            </IonTab>

            <IonTabBar slot="bottom">
                <IonTabButton @onclick='() => StackPush("/receive")'>
                    <IonIcon name="qr-code"></IonIcon>
                    <IonLabel>RECEIVE</IonLabel>
                </IonTabButton>
                <IonTabButton @onclick='() => StackPush("/coinjoin")'>
                    <IonIcon name="logo-bitcoin"></IonIcon>
                    <IonLabel>COINJOIN</IonLabel>
                </IonTabButton>
                <IonTabButton @onclick='() => StackPush("/send/who")'>
                    <IonIcon name="send"></IonIcon>
                    <IonLabel>SEND</IonLabel>
                </IonTabButton>
            </IonTabBar>
        </IonTabs>
    </IonPage>
</IonSplitPane>

@code{

    protected override void OnInitialized()
    {
        base.OnInitialized();
        StateService.StateChanged += OnStateServiceOnStateChanged;
        StackService.StackStateChanged += OnStateServiceOnStateChanged;
        OnStateServiceOnStateChanged();
        StateService.ThemeChanged += StateServiceOnThemeChanged;
        StateService.SetSystemTheme();
    }

    private void StateServiceOnThemeChanged()
    {
        _ = ThemeSwitcher.ToggleDark(StateService.DarkMode);
    }

    private void OnStateServiceOnStateChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    private void StackPush(string uri)
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(null, "/overview");
        });
        NavigationManager.NavigateTo(uri);
    }

    public void Dispose()
    {
        StateService.StateChanged -= OnStateServiceOnStateChanged;
        StateService.ThemeChanged -= StateServiceOnThemeChanged;
        StackService.StackStateChanged -= OnStateServiceOnStateChanged;
    }
}
