@page "/send/who"
@using Microsoft.AspNetCore.Components
@using Chaincase.Common
@using Chaincase.Common.Contracts
@using Chaincase.UI.Services
@inject Global Global
@inject SendViewModel SendViewModel
@inject UIStateService UiStateService
@inject NavigationManager NavigationManager
@inject StackService StackService
@inject IJSRuntime JsRuntime
@inject IClipboard Clipboard
@inherits ReactiveComponentBase<SendViewModel>

<IonContent class="ion-padding">

    <IonLabel position="stacked" id="destination-label">Add Recipient</IonLabel>
    <IonItem>
        <IonInput @bind-Value="ViewModel.DestinationString" placeholder="address/bitcoin:uri" aria-labelledby="destination-label"/>
        <IonIcon @onclick="OnClickPaste" size="small" slot="end" name="clipboard-outline" aria-label="paste"/>
        <IonIcon @onclick="OnClickScan" size="small" slot="end" name="scan-outline" aria-label="scan"/>
    </IonItem>

    <IonButton OnClick="OnContinue" color="primary" expand="block" disabled="@(!IsAddressValid)">NEXT</IonButton>
</IonContent>

@code {

    private string Label { get; set; }

    private string _addressString;

    private bool IsAddressValid => ViewModel.Address is not null;

    protected override void OnInitialized()
    {
        ViewModel = SendViewModel;
        UiStateService.Title = "SEND";
    }

    private async Task OnClickScan()
    {
        var scanner = new ZXing.Mobile.MobileBarcodeScanner();
        var result = await scanner.Scan();

        if (result != null)
        { ViewModel.DestinationString = result.Text; }
    }

    private async Task OnClickPaste()
    {
        ViewModel.DestinationString = await Clipboard.Paste();
    }

    public void OnContinue()
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(JsRuntime, "/send/who");
        });
        NavigationManager.NavigateTo("/send/label");
    }

}
