@page "/walletinfo"
@using Chaincase.Common.Contracts
@using Chaincase.UI.Services
@inject WalletInfoViewModel vm
@inject IClipboard Clipboard
@inject UIStateService UiStateService
@inject StackService StackService
@inject NavigationManager NavigationManager
@inherits ReactiveComponentBase<WalletInfoViewModel>

<IonContent>
    <ClipboardToast @bind-Visible="@IsToastVisible" />
    <IonList>
        <IonItem button OnClick="NavigateToBackUp" disabled="@ViewModel.HasNoSeedWords">
            <IonIcon slot="start" color="primary" name="lock-closed" />
            <IonLabel>Back Up Seed Words</IonLabel>
        </IonItem>
        <IonItem button OnClick="ViewModel.ExportWallet">
            <IonIcon slot="start" color="primary" name="shield-checkmark" />
            <IonLabel>Export Wallet File</IonLabel>
        </IonItem>
        <IonItem button OnClick="ViewModel.ShareDebugLog">
            <IonIcon slot="start" color="primary" name="bug" />
            <IonLabel>Share Debug Log</IonLabel>
        </IonItem>
        <IonItem button OnClick="NavigateToConnectFullNode">
            <IonIcon slot="start" color="primary" name="wifi-outline" />
            <IonLabel>Connect Full Node</IonLabel>
        </IonItem>
    </IonList>
    <ion-item-divider></ion-item-divider>
    <IonList>
        <IonItem @onclick="() => CopyToClipboardAsync(ViewModel.AccountKeyPath)">
            <IonLabel>
                <h3>Account Key Path</h3>
                <p color="medium">@ViewModel.AccountKeyPath</p>
            </IonLabel>
            <IonIcon size="small" color="primary" slot="end" name="copy-outline" />
        </IonItem>

        <IonItem OnClick="() => CopyToClipboardAsync(ViewModel.ExtendedAccountPublicKey.ToString())">
            <IonLabel>
                <h3>Extended Public Key (xpub)</h3>
                <p>@ViewModel.ExtendedAccountPublicKey</p>
            </IonLabel>
            <IonIcon size="small" color="primary" slot="end" name="copy-outline" />
        </IonItem>
    </IonList>
    @if (ViewModel.HasNoSeedWords)
    {
        <IonCard class="ion-padding" color="warning">
            <IonCardContent>
                <strong>Warning:</strong> This wallet does not have seed words because it
                is from the early Chaincase Beta. Thank you sincerely for your support as an early adopter!

                You can still back up with "Export Wallet File" but the recovery process is more complex. Please
                move funds out of this wallet and create a new one. New wallets have all the latest recovery features.
            </IonCardContent>
        </IonCard>
    }
</IonContent>

@code {
    private bool IsToastVisible = false;

    protected override void OnInitialized()
    {
        ViewModel = vm;
        UiStateService.Title = "WALLET INFO";
    }

    private async Task CopyToClipboardAsync(string toCopy)
    {
        await Clipboard.Copy(toCopy);
        IsToastVisible = true;
    }

    private void NavigateToBackUp()
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(null, "/walletinfo");
        });
        NavigationManager.NavigateTo("/backup/start");
    }

    private void NavigateToConnectFullNode()
    {
        StackService.PushStackState(async () =>
        {
            await NavigationManager.NavigateBack(null, "/walletinfo");
        });
        NavigationManager.NavigateTo("/connectfullnode");
    }
}
