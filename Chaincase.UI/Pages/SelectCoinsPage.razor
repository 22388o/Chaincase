@page "/selectcoins"

@using Chaincase.Common
@using Chaincase.UI.Services
@inject Global Global
@inject UIStateService UiStateService
@inject SelectCoinsViewModel SelectCoinsViewModel
@inherits ReactiveComponentBase<SelectCoinsViewModel>


<IonContent>
    @if (!ViewModel.CoinList.Any())
    {
        <IonText class="ion-text-center">
            <p>Your coins will appear here</p>
        </IonText>
    }
    else
    {
    <IonList>
        @foreach (var coin in ViewModel.CoinList)
        {
        <IonItemSliding>
            <IonItem>
                <IonCheckbox slot="start"
                             @bind-Value="coin.IsSelected" />
                <IonLabel slot="start">@coin.Clusters</IonLabel>
                <IonLabel class="ion-float-end">₿ @coin.Amount</IonLabel>
                <IonNote color="@(coin.AnonymitySet > Config.DefaultPrivacyLevelSome ? "success" : "warning")"
                         slot="end">
                    @coin.AnonymitySet
                </IonNote>
            </IonItem>
            <IonItemOptions side="end">
                <IonItemOption OnClick="@(() => OpenCoinDetail(coin))" color="default">Details</IonItemOption>
            </IonItemOptions>
        </IonItemSliding>
        }
    </IonList>
    }

</IonContent>
<IonFooter>
    <IonCard color="primary">
        <IonCardContent>
            <strong>Total:</strong>
            <span class="ion-float-end">@ViewModel.SelectedAmount BTC</span>
        </IonCardContent>
    </IonCard>
</IonFooter>
<CoinDetailModal @bind-Visible="@IsDetailModalVisible" @bind-CoinViewModel="@CurrentCoinViewModel" />


@code {

    private string CoinSelectionRadios { get; set; }

    private bool IsDetailModalVisible { get; set; }

    private CoinViewModel CurrentCoinViewModel { get; set; }

    protected override void OnParametersSet()
    {
        ViewModel = SelectCoinsViewModel;
        base.OnParametersSet();
        UiStateService.Title = "Select Coins";

    }

    private void OpenCoinDetail(CoinViewModel coin)
    {
        CurrentCoinViewModel = coin;
        IsDetailModalVisible = true;
    }
}
