@page "/load"
@using Chaincase.UI.Services
@inject LoadWalletViewModel vm
@inject UIStateService UiStateService
@inject NavigationManager NavigationManager
@inject StackService StackService 

@inherits ReactiveComponentBase<LoadWalletViewModel>

<IonContent class="ion-padding">
    <IonLabel position="stacked">Enter 12 Seed Words</IonLabel>
    <IonItem>
        <IonInput type='text' @bind-Value="@ViewModel.SeedWords" />
    </IonItem>
    <p>Enter the 12 words you wrote down as a backup in order and separated by spaces.</p>

    <IonLabel floating>Enter Password</IonLabel>
    <IonItem>
        <IonPasswordInput clear-on-edit="false" @bind-Value="@ViewModel.Password" placeholder="e.g. margaretthatcheris110%SEXY" />
    </IonItem>
    <p>
        If funds secured using these seed words are hidden behind a password you must enter it here.
        The password must be exactly as it was created. As it is your secret, we cannot check whether or not it is correct.
    </p>

    <IonButton OnClick="LoadWallet"
               expand="block">
        LOAD WALLET
    </IonButton>
</IonContent>

@code {

    bool showPassword;

    protected override void OnInitialized()
    {
        ViewModel = vm;
        UiStateService.Title = "LOAD WALLET";
    }

    private void LoadWallet(MouseEventArgs _)
    {
        // TODO if password is empty, alert the user

        if (ViewModel.LoadWallet()) {
            StackService.ClearStack();
            NavigationManager.NavigateTo("/");
        }
    }

    private void HideShowPassword()
    {
        showPassword = !showPassword;
    }
}
